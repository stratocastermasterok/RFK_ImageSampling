{    app.beginUndoGroup("Animate");    function saveTxt(txt,theName){    var saveFile = File("/Users/adewale/Desktop" + "/" + theName +".txt");    if(saveFile.exists)        saveFile.remove();    saveFile.encoding = "UTF8";    saveFile.open("e", "TEXT", "????");    saveFile.writeln(txt);    saveFile.close();}function tomiImageSample(startPosition,endPosition,xInterval,yInterval,circleSize){    var myComp = app.project.activeItem;    var selectedLayers = myComp.selectedLayers;for (m = 0; m<selectedLayers.length; m++)  {var sourceName= selectedLayers[m].name;var myNull = myComp.layers.addNull();var startPosition =startPositionvar endPosition=endPosition;var xInterval=xIntervalvar yInterval=yInterval;var xSize= endPosition[0]-startPosition[0];var ySize= endPosition[1]-startPosition[1];var xTimes=Math.floor(xSize/xInterval);var yTimes = Math.floor(ySize/yInterval);var gridCount=xTimes*yTimes;//alert([gridCount, xTimes, yTimes]);if (circleSize== null){var circleSize=xInterval/2;} else {var circleSize=circleSize};var capturedData='"';        //start of calc loop        var nothingCounter=0;        for (i = 0; i<gridCount; i++)        {                var positionToInspect= startPosition+[(i%xTimes)*xInterval,Math.floor(i/xTimes)*yInterval];                //alert(positionToInspect);                var myExp='target = thisComp.layer("'+sourceName+'");\nresult=target.sampleImage(['+positionToInspect[0]+','+positionToInspect[1]+'], [.5, .5]/2, true, time);\n[(result[1]+result[2]+result[0]/3),result[3]];'                            myNull.property("position").expression=myExp;                //alert(myNull.property("rotation").valueAtTime(0, false));                var myFoundAlpha = parseFloat(myNull.property("position").valueAtTime(0, false)[1]);                //alert(myFoundVal);                                if (myFoundAlpha==1)                {//something is there ... do something                    //alert("triggered")                var myFoundVal = parseFloat(myNull.property("position").valueAtTime(0, false)[0]);                                //if over a certain amount, put it in the list                if (myFoundVal<=.6)                {                    capturedData+=positionToInspect[0]+":"+positionToInspect[1]+",";                    }                                                                                //~                       var myShape = myComp.layers.addShape();//~                       myShape.name=i;//~                       myShape.property("position").setValue(positionToInspect);//~                       //alert(positionToInspect);//~                      //myShape.blendingMode = BlendingMode.MULTIPLY;//~                      //ELIPSE SIZE//~                      var shapeGroup = myShape.property("Contents").addProperty("ADBE Vector Group");//~                      var Ellipse = shapeGroup.property("Contents").addProperty("ADBE Vector Shape - Ellipse");//~                      Ellipse.property("ADBE Vector Ellipse Size").setValue([circleSize,circleSize]);//~                      //FILL COLOR//~                       var Fill = shapeGroup.property("Contents").addProperty("ADBE Vector Graphic - Fill");//~                       Fill.property("ADBE Vector Fill Color").setValue([myFoundVal,myFoundVal,myFoundVal]);                                         }                                else                {//nothin is ther, keep count                    nothingCounter++;                    if (nothingCounter%100==0)                    {                        //alert(nothingCounter +" out of "+ gridCount);                        }                                                            }                                                                                            }//end i for loopmyNull.remove();    }  //end m for loop        var myChangeToTheText=capturedData.split("");    myChangeToTheText.pop();    myChangeToTheText.push('"');    var brandNewText= myChangeToTheText.join("");        saveTxt(brandNewText,sourceName);    alert(brandNewText);}//end of functiontomiImageSample([50,50],[1920,1080],50,50,30);}//end of undo group